// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component Renders the Landing Page by default 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <App>
      <main>
        <ErrorBoundary>
          <Switch>
            <Route
              component={[Function]}
              computedMatch={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              exact={true}
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              path="/"
            >
              <withRouter(Landing)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                match={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
              >
                <Route>
                  <Landing
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                  >
                    <div
                      className="landingPage"
                    >
                      <header
                        className="landing"
                      >
                        <h1>
                          BATTLESHIP
                        </h1>
                        <nav
                          aria-label="click to view app info"
                          className="arrow-nav"
                        >
                          <div
                            className="arrow"
                            onClick={[Function]}
                          />
                        </nav>
                      </header>
                      <div
                        aria-live="polite"
                        id="app-info"
                      >
                        <p
                          aria-label="app information"
                        >
                          Welcome to Battleship! The interactive game where you can challenge opponents in the classic game of sinking ships. This application allows the user to play a live game of battleship against another user. The user will receive live updates on their opponents advancements on the game board. Additionally, user's have the ability to leave a game and return to it later.
                        </p>
                        <p
                          aria-label="app information"
                        >
                          To test out the site please create a new account, or log in with the username: TestUser1 and password: Password123. To test the live game feature you will have to log in as a different user via a separate internet browser (ie: Safari, Chrome, Firefox etc.) OR log in on a mobile device using the username: TestUser2 and password: Password123. This will give you the ability to play against yourself in the two separate browsers. Alternatively, you may give the second user login information to a friend and challenge them in a game of Battleship. Fire Away!
                        </p>
                        <ForwardRef
                          onClick={[Function]}
                        >
                          <button
                            className="Button"
                            onClick={[Function]}
                          >
                             Proceed to Login
                          </button>
                        </ForwardRef>
                      </div>
                    </div>
                  </Landing>
                </Route>
              </withRouter(Landing)>
            </Route>
          </Switch>
        </ErrorBoundary>
      </main>
    </App>
  </Router>
</BrowserRouter>
`;
